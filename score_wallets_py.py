# -*- coding: utf-8 -*-
"""score_wallets.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kk5GFLccGR947O7VuZU_2MDX44GR5MKt

DeFi Wallet Credit Score Model
"""

import requests
import zipfile
import io

# ✅ Correct raw URL
url = "https://github.com/Himani-Barmase/DeFi-Wallet-Credit-Score-Model/raw/main/user-wallet-transactions.zip"

# 1. Download the ZIP file
response = requests.get(url)

# 2. Open the zip file from bytes
with zipfile.ZipFile(io.BytesIO(response.content)) as zip_ref:
    zip_ref.extractall("data")

print("✅ ZIP extracted to 'data/' folder")

import os
os.listdir("data")

import json
import pandas as pd

# Load the file
with open("data/user-wallet-transactions.json", "r") as f:
    data = json.load(f)

# Convert to DataFrame
df = pd.DataFrame(data)
df.head()

#Clean and Rename Columns
df_clean = df[['userWallet', 'action']].copy()
df_clean.columns = ['wallet', 'action']
df_clean.head()

# Create a pivot table to count each action type per wallet
action_counts = pd.pivot_table(df_clean,
                                index='wallet',
                                columns='action',
                                aggfunc='size',
                                fill_value=0).reset_index()

# Rename columns for consistency
action_counts.columns.name = None  # remove grouping name
action_counts.head()

#Add Derived Features
df_feat = action_counts.copy()

# Create derived ratios (add +1 to denominator to avoid division by zero)
df_feat['deposit_to_borrow_ratio'] = df_feat.get('deposit', 0) / (df_feat.get('borrow', 0) + 1)
df_feat['repay_to_borrow_ratio'] = df_feat.get('repay', 0) / (df_feat.get('borrow', 0) + 1)
df_feat['liquidation_ratio'] = df_feat.get('liquidationcall', 0) / (
    df_feat.drop('wallet', axis=1).sum(axis=1) + 1
)
df_feat['repay_score'] = df_feat.get('repay', 0) / (df_feat.get('borrow', 0) + 1)

#Assign Credit Score (0–1000)
# Weighted formula (you can tweak these)
df_feat['score'] = (
    0.25 * (df_feat['deposit_to_borrow_ratio'].clip(0, 5) / 5) +
    0.25 * (df_feat['repay_to_borrow_ratio'].clip(0, 5) / 5) +
    0.25 * (1 - df_feat['liquidation_ratio'].clip(0, 1)) +
    0.25 * (df_feat['repay_score'].clip(0, 1))
) * 1000

# Round and clip score
df_feat['score'] = df_feat['score'].round().clip(0, 1000).astype(int)

df_feat[['wallet', 'score']].head()

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
sns.histplot(df_feat['score'], bins=20, kde=True, color='skyblue')
plt.title('Distribution of Wallet Credit Scores')
plt.xlabel('Credit Score (0–1000)')
plt.ylabel('Number of Wallets')
plt.grid(True)
plt.show()

"""The majority of wallets have credit scores between 250 and 400, indicating moderate risk or limited responsible behavior.

The distribution is left-skewed, meaning that highly reliable users (scores > 600) are relatively rare.

Very few wallets score above 800, likely representing high-quality DeFi participants with consistent deposits and repayments.

The sharp peak around 300 suggests many wallets show low engagement or bot-like activity.

The tail on the right (scores 600–1000) shows a small group of trustworthy, healthy users.

This distribution reflects the nature of open DeFi platforms where anyone can interact, including bots, opportunistic wallets, and low-activity users.
"""





